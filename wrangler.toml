name = "hinata"
main = "src/index.js"
compatibility_date = "2023-12-06"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
[vars]

TG_BOT_API_TOKEN = "7531536741:AAFUZN8NQJEKEvM8YOp6V8cXbVL5N-ymNrk"
TG_BOT_OWNER_ID = "@Moonshining2"
CLOUDFLARE_API_TOKEN = "5jeGcy7WJsotPf98OixsJKs_otRyTln6eh2KazLW5Krp9QtFbRgSuA3i2bExC2ekXA8FQQobvnp1BLrb13R4rnDdiccS6sxX1xBHX22Av9NuGMMslwTr9mStfSWzAU2kq32g4Aij6XFnmT_Dnl32gsWPbpXkNulryRq1N3bmSNV-VupVLmlXhfNypbPJw3wvrFanYyf4vl_CDo7kVXWLQvhG-RHVGkrX6QHn2U0fOsFf-RcqjMdcEXPu6Q6DaZqJbwHhXkTUSxKH8Z8tIVloStDF0AwvLsGDf1ekd4cqSc8XfHTZhKlqCdKppFwQ8lo6ixbzy8J1sflaEStoltplysMYtzPKzlo6wFlzO4emyy85BDazNuP109t7G8Uo2cZKfX9ZLKD9PCydlTfI-hoN1mqDtw4hBrQxR8XLOLO5kpE8xWxZ9BlOJq-nxB7qkbCVJ5Xs5NEfoozd68_UoO3mqUVk-ypcBhC93ZHP6fKVu_Pft-Qnt8K72eZ-PRa4-E4gmJSxQ8Zz6DekO0oNe3kPXWA07UrX6VNNwj8bSACCB_BkOOaCnyHE4EnuDgVpiBCaITmmpKiYv_Bz-vouiCOf5hWml9Is"


# [placement]
# mode = "smart"




# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
# [[r2_buckets]]
# binding = "MY_BUCKET"
# bucket_name = "my-bucket"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]
